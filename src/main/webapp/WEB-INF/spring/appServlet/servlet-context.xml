<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/WEB-INF/views/CSS/**" mapping="/CSS/**"/>
	<resources location="/WEB-INF/views/Jquery/**" mapping="/Jquery/**"/>
	<resources location="/WEB-INF/views/script/**" mapping="/script/**"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<context:component-scan base-package="bookRental.tiles.Controller" />
	
	<beans:bean name="dataSource" 	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@110.165.125.150:1521:ora11utf8"/>
		<beans:property name="username" value="DHOKIM"/>
		<beans:property name="password" value="DHOKIM"/>
	</beans:bean>
		
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:bookRental/tiles/DAO/*.xml"/>
	</beans:bean>
		
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!-- Use Tiles -->
			 <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		 <beans:property name="definitions">
		  <beans:list>
		   <beans:value>/WEB-INF/views/tiles/tiles.xml</beans:value>
		  </beans:list>
		 </beans:property>
		 <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
		 </beans:bean>
		 <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		  <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		  <beans:property name="order" value="1" />
	 </beans:bean>
	<!-- /Use Tiles -->
	
	
</beans:beans>
